/*
Copyright (c) 2024, Alibaba Group;
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

import "google/protobuf/empty.proto";

message WarmupResponse {
  bool is_ok = 1;
  string error_msg = 2;
}

message WorkerInfo {
  string ip_address = 1;
  string instance_id = 2;
  int32 worker_id = 3;
  string kv_transfer_instance_id = 4;
}

message MigrateCacheRequest {
  repeated WorkerInfo src_handlers = 1;
  int32 request_id = 2;
  bool is_last_stage = 3;
  repeated int32 src_blocks = 4;
  repeated int32 dst_blocks = 5;
}

message MigrateCacheResponse {
  int32 request_id = 1;
  int32 num_output_token = 2;
  int32 num_in_token = 3;
}

message SendKvCacheRequest {
  int32 request_id = 1;
  repeated int32 src_blocks = 2;
  repeated int32 dst_blocks = 3;
  bool is_last_stage = 4;
  optional string dst_instance_id = 5;
  optional int32 dst_worker_id = 6;
  optional string dst_kv_transfer_instance_id = 7;
}

message SendKvCacheResponse {
  int32 request_id = 1;
  optional bytes key = 2;
  optional bytes value = 3;
  optional bytes kv = 4;
  optional bytes state_manager_data = 5;
  optional bytes request_tracker_data = 6;
}

message SendRequestStateRequest {
  int32 request_id = 1;
}

message RequestGroups {
  repeated string data = 1;
}

service MigrationWorker {
  rpc is_ready(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc warmup (google.protobuf.Empty) returns (WarmupResponse) {}
  rpc migrate_cache (MigrateCacheRequest) returns (MigrateCacheResponse) {}
  rpc do_send (SendKvCacheRequest) returns (SendKvCacheResponse) {}
}
