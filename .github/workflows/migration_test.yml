name: migration_test

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

jobs:
  cancel_previous_workflows:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
    - uses: styfle/cancel-workflow-action@0.12.1
      with:
        all_but_latest: true

  vllm_migration_test:
    needs: cancel_previous_workflows
    runs-on: [self-hosted,non-rdma]
    timeout-minutes: 90
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Kill Running Containers
      run: |
        [[ -n $(docker ps -q) ]] && docker kill $(docker ps -q) || echo "No running containers to kill."
    - name: Build And Test
      run: ./tools/run_test.sh vllm_migration_test
    - name: Create comment from file
      if: ${{ github.event_name != 'push' }}
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const fs = require('fs');
            const filePath = 'performance.txt';
            const commentBody = fs.readFileSync(filePath, 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
          } catch (error) {
            console.log('Failed to create comment:', error.message);
          }

  bladellm_migration_test:
    needs: cancel_previous_workflows
    runs-on: [self-hosted,rdma]
    timeout-minutes: 120
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Kill Running Containers
      run: |
        [[ -n $(docker ps -q) ]] && docker kill $(docker ps -q) || echo "No running containers to kill."
    - name: Build And Test
      run: ./tools/run_test.sh bladellm_migration_test
    - name: Create comment from file
      if: ${{ github.event_name != 'push' }}
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const fs = require('fs');
            const filePath = 'performance.txt';
            const commentBody = fs.readFileSync(filePath, 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
          } catch (error) {
            console.log('Failed to create comment:', error.message);
          }
